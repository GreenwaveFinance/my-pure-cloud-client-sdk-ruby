=begin
PureCloud Platform API

With the PureCloud Platform API, you can control all aspects of your PureCloud environment. With the APIs you can access the system configuration, manage conversations and more.

OpenAPI spec version: v2
Contact: DeveloperEvangelists@genesys.com
Generated by: https://github.com/swagger-api/swagger-codegen.git

License: ININ
http://www.inin.com

Terms of Service: https://developer.mypurecloud.com/tos

=end

require "uri"

module PureCloud
  class WebChatApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end

    # Delete a WebChat deployment
    # 
    # @param deployment_id Deployment Id
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def delete_webchat_deployment(deployment_id, opts = {})
      delete_webchat_deployment_with_http_info(deployment_id, opts)
      return nil
    end

    # Delete a WebChat deployment
    # 
    # @param deployment_id Deployment Id
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def delete_webchat_deployment_with_http_info(deployment_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: WebChatApi.delete_webchat_deployment ..."
      end
      
      
      # verify the required parameter 'deployment_id' is set
      fail ArgumentError, "Missing the required parameter 'deployment_id' when calling WebChatApi.delete_webchat_deployment" if deployment_id.nil?
      
      
      
      
      
      # resource path
      local_var_path = "/api/v2/webchat/deployments/{deploymentId}".sub('{format}','json').sub('{' + 'deploymentId' + '}', deployment_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      
      auth_names = ['PureCloud Auth']
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: WebChatApi#delete_webchat_deployment\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Remove WebChat deployment settings
    # 
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def delete_webchat_settings(opts = {})
      delete_webchat_settings_with_http_info(opts)
      return nil
    end

    # Remove WebChat deployment settings
    # 
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def delete_webchat_settings_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: WebChatApi.delete_webchat_settings ..."
      end
      
      # resource path
      local_var_path = "/api/v2/webchat/settings".sub('{format}','json')

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      
      auth_names = ['PureCloud Auth']
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: WebChatApi#delete_webchat_settings\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Get a WebChat deployment
    # 
    # @param deployment_id Deployment Id
    # @param [Hash] opts the optional parameters
    # @return [WebChatDeployment]
    def get_webchat_deployment(deployment_id, opts = {})
      data, _status_code, _headers = get_webchat_deployment_with_http_info(deployment_id, opts)
      return data
    end

    # Get a WebChat deployment
    # 
    # @param deployment_id Deployment Id
    # @param [Hash] opts the optional parameters
    # @return [Array<(WebChatDeployment, Fixnum, Hash)>] WebChatDeployment data, response status code and response headers
    def get_webchat_deployment_with_http_info(deployment_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: WebChatApi.get_webchat_deployment ..."
      end
      
      
      # verify the required parameter 'deployment_id' is set
      fail ArgumentError, "Missing the required parameter 'deployment_id' when calling WebChatApi.get_webchat_deployment" if deployment_id.nil?
      
      
      
      
      
      # resource path
      local_var_path = "/api/v2/webchat/deployments/{deploymentId}".sub('{format}','json').sub('{' + 'deploymentId' + '}', deployment_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      
      auth_names = ['PureCloud Auth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'WebChatDeployment')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: WebChatApi#get_webchat_deployment\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # List WebChat deployments
    # 
    # @param [Hash] opts the optional parameters
    # @return [WebChatDeploymentEntityListing]
    def get_webchat_deployments(opts = {})
      data, _status_code, _headers = get_webchat_deployments_with_http_info(opts)
      return data
    end

    # List WebChat deployments
    # 
    # @param [Hash] opts the optional parameters
    # @return [Array<(WebChatDeploymentEntityListing, Fixnum, Hash)>] WebChatDeploymentEntityListing data, response status code and response headers
    def get_webchat_deployments_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: WebChatApi.get_webchat_deployments ..."
      end
      
      # resource path
      local_var_path = "/api/v2/webchat/deployments".sub('{format}','json')

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      
      auth_names = ['PureCloud Auth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'WebChatDeploymentEntityListing')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: WebChatApi#get_webchat_deployments\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Get WebChat deployment settings
    # 
    # @param [Hash] opts the optional parameters
    # @return [WebChatSettings]
    def get_webchat_settings(opts = {})
      data, _status_code, _headers = get_webchat_settings_with_http_info(opts)
      return data
    end

    # Get WebChat deployment settings
    # 
    # @param [Hash] opts the optional parameters
    # @return [Array<(WebChatSettings, Fixnum, Hash)>] WebChatSettings data, response status code and response headers
    def get_webchat_settings_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: WebChatApi.get_webchat_settings ..."
      end
      
      # resource path
      local_var_path = "/api/v2/webchat/settings".sub('{format}','json')

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      
      auth_names = ['PureCloud Auth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'WebChatSettings')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: WebChatApi#get_webchat_settings\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Create WebChat deployment
    # 
    # @param body Deployment
    # @param [Hash] opts the optional parameters
    # @return [WebChatDeployment]
    def post_webchat_deployments(body, opts = {})
      data, _status_code, _headers = post_webchat_deployments_with_http_info(body, opts)
      return data
    end

    # Create WebChat deployment
    # 
    # @param body Deployment
    # @param [Hash] opts the optional parameters
    # @return [Array<(WebChatDeployment, Fixnum, Hash)>] WebChatDeployment data, response status code and response headers
    def post_webchat_deployments_with_http_info(body, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: WebChatApi.post_webchat_deployments ..."
      end
      
      
      # verify the required parameter 'body' is set
      fail ArgumentError, "Missing the required parameter 'body' when calling WebChatApi.post_webchat_deployments" if body.nil?
      
      
      
      
      
      # resource path
      local_var_path = "/api/v2/webchat/deployments".sub('{format}','json')

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(body)
      
      auth_names = ['PureCloud Auth']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'WebChatDeployment')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: WebChatApi#post_webchat_deployments\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Create WebChat deployment settings
    # 
    # @param body webChatSettings
    # @param [Hash] opts the optional parameters
    # @return [WebChatSettings]
    def post_webchat_settings(body, opts = {})
      data, _status_code, _headers = post_webchat_settings_with_http_info(body, opts)
      return data
    end

    # Create WebChat deployment settings
    # 
    # @param body webChatSettings
    # @param [Hash] opts the optional parameters
    # @return [Array<(WebChatSettings, Fixnum, Hash)>] WebChatSettings data, response status code and response headers
    def post_webchat_settings_with_http_info(body, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: WebChatApi.post_webchat_settings ..."
      end
      
      
      # verify the required parameter 'body' is set
      fail ArgumentError, "Missing the required parameter 'body' when calling WebChatApi.post_webchat_settings" if body.nil?
      
      
      
      
      
      # resource path
      local_var_path = "/api/v2/webchat/settings".sub('{format}','json')

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(body)
      
      auth_names = ['PureCloud Auth']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'WebChatSettings')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: WebChatApi#post_webchat_settings\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Update a WebChat deployment
    # 
    # @param deployment_id Deployment Id
    # @param body Deployment
    # @param [Hash] opts the optional parameters
    # @return [WebChatDeployment]
    def put_webchat_deployment(deployment_id, body, opts = {})
      data, _status_code, _headers = put_webchat_deployment_with_http_info(deployment_id, body, opts)
      return data
    end

    # Update a WebChat deployment
    # 
    # @param deployment_id Deployment Id
    # @param body Deployment
    # @param [Hash] opts the optional parameters
    # @return [Array<(WebChatDeployment, Fixnum, Hash)>] WebChatDeployment data, response status code and response headers
    def put_webchat_deployment_with_http_info(deployment_id, body, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: WebChatApi.put_webchat_deployment ..."
      end
      
      
      # verify the required parameter 'deployment_id' is set
      fail ArgumentError, "Missing the required parameter 'deployment_id' when calling WebChatApi.put_webchat_deployment" if deployment_id.nil?
      
      
      
      
      
      
      # verify the required parameter 'body' is set
      fail ArgumentError, "Missing the required parameter 'body' when calling WebChatApi.put_webchat_deployment" if body.nil?
      
      
      
      
      
      # resource path
      local_var_path = "/api/v2/webchat/deployments/{deploymentId}".sub('{format}','json').sub('{' + 'deploymentId' + '}', deployment_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(body)
      
      auth_names = ['PureCloud Auth']
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'WebChatDeployment')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: WebChatApi#put_webchat_deployment\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Update WebChat deployment settings
    # 
    # @param body webChatSettings
    # @param [Hash] opts the optional parameters
    # @return [WebChatSettings]
    def put_webchat_settings(body, opts = {})
      data, _status_code, _headers = put_webchat_settings_with_http_info(body, opts)
      return data
    end

    # Update WebChat deployment settings
    # 
    # @param body webChatSettings
    # @param [Hash] opts the optional parameters
    # @return [Array<(WebChatSettings, Fixnum, Hash)>] WebChatSettings data, response status code and response headers
    def put_webchat_settings_with_http_info(body, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: WebChatApi.put_webchat_settings ..."
      end
      
      
      # verify the required parameter 'body' is set
      fail ArgumentError, "Missing the required parameter 'body' when calling WebChatApi.put_webchat_settings" if body.nil?
      
      
      
      
      
      # resource path
      local_var_path = "/api/v2/webchat/settings".sub('{format}','json')

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(body)
      
      auth_names = ['PureCloud Auth']
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'WebChatSettings')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: WebChatApi#put_webchat_settings\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
